---
import LoadingIndicator from "~/components/loading-indicator.astro";
import { labelStyles } from "~/shared/styles/components/field";
import { inputStyles } from "~/shared/styles/components/input";

export type Props = {
  value?: string;
  isValid?: boolean;
};

const { value, isValid } = Astro.props;

const variant =
  isValid === undefined ? "default" : isValid ? "default" : "error";
---

<div class="grid gap-2" hx-target="this" hx-swap="outerHTML">
  <label class={labelStyles({ variant })} for="slug">Short Name</label>

  <div class="flex gap-2 items-center">
    <input
      id="slug"
      name="slug"
      class={inputStyles({ variant })}
      placeholder="my-org"
      required
      hx-post="/partials/org/slug"
      hx-indicator="#status-indicator"
      {value}
    />

    <div id="status-indicator" class="loading-indicator">
      <div class="size-6 flex items-center">
        <LoadingIndicator />
      </div>
    </div>

    {
      isValid && (
        <svg
          id="status-indicator"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="success-indicator text-green-500 size-6"
        >
          <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14" />
          <path d="m9 11 3 3L22 4" />
        </svg>
      )
    }
  </div>

  {
    isValid === false && (
      <p class="text-red-500 text-sm">
        This organization name is invalid or already taken.
      </p>
    )
  }
</div>

<style>
  .loading-indicator {
    display: none;
  }

  .htmx-request .loading-indicator {
    display: inline;
  }

  .htmx-request.loading-indicator {
    display: inline;
  }

  .htmx-request.success-indicator {
    display: none;
  }
</style>
