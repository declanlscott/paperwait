---
import { Icon } from "astro-icon/components";

import { buttonStyles } from "~/styles/components/primitives/button";
import { labelStyles } from "~/styles/components/primitives/field";
import { selectTriggerStyles } from "~/styles/components/primitives/select";
import { inputStyles } from "~/styles/components/primitives/text-field";

import type { RegistrationStepProps } from "~/components/props";

type Props = RegistrationStepProps;

const { input, errors } = Astro.props;
---

<div class="grid gap-4" hx-target="this" hx-swap="outerHTML">
  <div class="grid gap-2">
    <label class={labelStyles()} for="oauth2-provider-variant"
      >OAuth Provider</label
    >
    <select
      id="oauth2-provider-variant"
      name="oauth2ProviderVariant"
      class={selectTriggerStyles({
        isHtml: true,
        class:
          "border-0 border-r-8 border-transparent outline-input outline-1 outline",
      })}
      required
    >
      <option
        value="entra-id"
        selected={input.oauth2ProviderVariant === "entra-id"}
        >Microsoft Entra ID</option
      >
      <option value="google" selected={input.oauth2ProviderVariant === "google"}
        >Google</option
      >
    </select>
    {
      errors?.oauth2ProviderVariant ? (
        <p class="text-destructive text-sm">{errors.oauth2ProviderVariant}</p>
      ) : null
    }
  </div>

  <div class="grid gap-2">
    <label class={labelStyles()} for="oauth2-provider-id"
      >OAuth Provider ID</label
    >
    <input
      id="oauth2-provider-id"
      name="oauth2ProviderId"
      class={inputStyles({
        isHtml: true,
        variant: errors?.oauth2ProviderId ? "destructive" : "default",
      })}
      required
      value={input.oauth2ProviderId}
    />
    {
      errors?.oauth2ProviderId ? (
        <p class="text-destructive text-sm">{errors.oauth2ProviderId}</p>
      ) : null
    }
  </div>

  <input type="hidden" name="licenseKey" value={input.licenseKey} />
  <input type="hidden" name="tenantName" value={input.tenantName} />
  <input type="hidden" name="tenantSlug" value={input.tenantSlug} />
  <input
    type="hidden"
    name="papercutAuthToken"
    value={input.papercutAuthToken}
  />
  <input
    type="hidden"
    name="tailscaleOauth2ClientId"
    value={input.tailscaleOauth2ClientId}
  />
  <input
    type="hidden"
    name="tailscaleOauth2ClientSecret"
    value={input.tailscaleOauth2ClientSecret}
  />

  <div class="flex justify-between gap-4">
    <button
      type="button"
      hx-post="/partials/registration/step-1?from=step-2"
      class={buttonStyles({
        isHtml: true,
        variant: "secondary",
        class: "gap-2",
      })}
    >
      <Icon name="lucide:arrow-left" />
      Back
    </button>
    <button
      type="button"
      hx-post="/partials/registration/step-3?from=step-2"
      class={buttonStyles({
        isHtml: true,
        variant: "secondary",
        class: "gap-2",
      })}
    >
      <Icon name="lucide:arrow-right" />
      Next
    </button>
  </div>
</div>
