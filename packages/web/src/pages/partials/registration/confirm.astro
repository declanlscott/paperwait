---
import * as v from "@paperwait/core/libs/valibot";
import { registrationSchema } from "@paperwait/core/tenants/shared";

import RegistrationConfirm from "~/components/registration/confirm.astro";
import RegistrationStep3 from "~/components/registration/step-3.astro";
import { getFormErrors, getFormInput } from "./_utils";

import type { RegistrationStepProps } from "~/components/props";

export const partial = true;

type ComponentProps =
  | { variant: "step-3"; data: RegistrationStepProps }
  | { variant: "confirm"; data: RegistrationStepProps };

const formData = await Astro.request.formData();
const input = getFormInput(formData);

const result = v.safeParse(registrationSchema, input);

const props = (
  !result.success
    ? {
        variant: "step-3",
        data: {
          input,
          errors: getFormErrors(result.issues),
        },
      }
    : {
        variant: "confirm",
        data: { input: result.output },
      }
) satisfies ComponentProps;
---

{
  props.variant === "step-3" ? (
    <RegistrationStep3 {...props.data} />
  ) : (
    <RegistrationConfirm {...props.data} />
  )
}
