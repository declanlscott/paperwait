---
import { HttpError } from "@paperwait/core/errors";
import { testPapercut } from "@paperwait/core/papercut";
import { NanoId } from "@paperwait/core/schemas";
import { validate } from "@paperwait/core/valibot";
import * as v from "valibot";

import TestPapercut from "~/components/papercut/test.astro";

import type { PapercutTestProps } from "~/types/astro-component-props";

export const partial = true;

const formData = await Astro.request.formData();

const { orgId, authToken } = validate(
  v.object({ orgId: NanoId, authToken: v.string() }),
  Object.fromEntries(formData.entries()),
);

let props: PapercutTestProps;
try {
  await testPapercut({ orgId, input: { authToken } });
  props = { status: "success" };
} catch (e) {
  props = {
    status: "error",
    reason: e instanceof HttpError ? e.message : "An unexpected error occurred",
  };
}
---

<TestPapercut {...props} />
